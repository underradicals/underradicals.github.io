import{_ as t,c as a,o as i,ae as s}from"./chunks/framework.U1Gow_7P.js";const k=JSON.parse('{"title":"Creating Python Environment","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"docs/python/index.md","filePath":"docs/python/index.md"}'),n={name:"docs/python/index.md"};function o(l,e,r,h,p,d){return i(),a("div",null,e[0]||(e[0]=[s('<h1 id="creating-python-environment" tabindex="-1">Creating Python Environment <a class="header-anchor" href="#creating-python-environment" aria-label="Permalink to &quot;Creating Python Environment&quot;">​</a></h1><p>Open up your terminal:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-E0zjd" id="tab--_UkIM8" checked><label data-title="bash" for="tab--_UkIM8">bash</label><input type="radio" name="group-E0zjd" id="tab-eQUYsNy"><label data-title="powershell" for="tab-eQUYsNy">powershell</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./.venv/bin/activate</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m venv .venv; .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.venv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">activate</span></span></code></pre></div></div></div><h2 id="but-why" tabindex="-1">But Why? <a class="header-anchor" href="#but-why" aria-label="Permalink to &quot;But Why?&quot;">​</a></h2><p>Python is primarily a scripting language, and its package system is global by default, that means that all installed packages not installed into a virtual environment are installed into a shared <code>site-packages</code> directory and that global directory is tied <code>one-to-one</code> to the python interpreter. So what that means, if we did not have virtual environments, installing <code>airflow</code> and <code>dbt</code> for one project might work if you used the correct versions. However, when you started another project, and wanted to use a newer version of dbt perhaps with <code>prefect</code> the package version conflicts would make project setup a nightmare. And the more projects you complete, the worse this problem becomes.</p><h2 id="virtual-environments" tabindex="-1">Virtual Environments <a class="header-anchor" href="#virtual-environments" aria-label="Permalink to &quot;Virtual Environments&quot;">​</a></h2><p>So when you create a new project and want to isolate that project from other projects you may be working on, you create a virtual environment. What do you get from taking this extra step?</p><blockquote><ul><li>An isolated python executable</li><li>An isolated pip executable</li><li>An isolated python interpreter</li></ul></blockquote><p>And this solves the problem of version conflicts, and make developing with python a simpler experience.</p>',9)]))}const v=t(n,[["render",o]]);export{k as __pageData,v as default};
